(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    height: 100vh;\n    box-sizing: border-box;\n}\n.container {\n    height: 100%;\n    display: grid;\n    grid-template-rows: 100px 1fr 40px;\n    grid-template-columns: clamp(100px, 200px, 300px) 1fr;\n}\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    color: white;\n}\n.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    background-color: lightgrey;\n    padding: 10px;\n}\n.projectsNav {\n\n}\n.projectsNavHeader {\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n.projectsNavHeader > button {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    background-color: white;\n    border: 0;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.projectsNavHeader > button:hover {\n    font-size: 32px;\n    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n    cursor: pointer;\n}\n.projectDiv {\n    display: flex;\n    overflow: hidden;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    padding: 5px;\n}\n.removeProjectButton {\n    position: absolute;\n    right: 0;\n    top: 5px;\n}\n.active {\n    background-color: yellow;\n}\n.content {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.contentHeader {\n    position: relative;\n}\n.contentHeader > h2 {\n    text-align: center;\n}\n.contentHeader > button {\n    position: absolute;\n    right: 20px;\n    top: 5px;\n}\nfooter {\n    grid-area: 3 / 1 / 4 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,4DAA4D;IAC5D,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,YAAY;IACZ,aAAa;IACb,kCAAkC;IAClC,qDAAqD;AACzD;AACA;IACI,wBAAwB;IACxB,6DAA6D;IAC7D,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;AACA;IACI,wBAAwB;IACxB,2BAA2B;IAC3B,aAAa;AACjB;AACA;;AAEA;AACA;IACI,8BAA8B;IAC9B,aAAa;IACb,mBAAmB;IACnB,8BAA8B;;AAElC;AACA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,+CAA+C;IAC/C,eAAe;AACnB;AACA;IACI,aAAa;IACb,gBAAgB;IAChB,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,QAAQ;AACZ;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,WAAW;IACX,QAAQ;AACZ;AACA;IACI,wBAAwB;IACxB,6DAA6D;IAC7D,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    height: 100vh;\n    box-sizing: border-box;\n}\n.container {\n    height: 100%;\n    display: grid;\n    grid-template-rows: 100px 1fr 40px;\n    grid-template-columns: clamp(100px, 200px, 300px) 1fr;\n}\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    color: white;\n}\n.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    background-color: lightgrey;\n    padding: 10px;\n}\n.projectsNav {\n\n}\n.projectsNavHeader {\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n.projectsNavHeader > button {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    background-color: white;\n    border: 0;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.projectsNavHeader > button:hover {\n    font-size: 32px;\n    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n    cursor: pointer;\n}\n.projectDiv {\n    display: flex;\n    overflow: hidden;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    padding: 5px;\n}\n.removeProjectButton {\n    position: absolute;\n    right: 0;\n    top: 5px;\n}\n.active {\n    background-color: yellow;\n}\n.content {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.contentHeader {\n    position: relative;\n}\n.contentHeader > h2 {\n    text-align: center;\n}\n.contentHeader > button {\n    position: absolute;\n    right: 20px;\n    top: 5px;\n}\nfooter {\n    grid-area: 3 / 1 / 4 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=o.base?s[0]+o.base:s[0],A=a[d]||0,l="".concat(d," ").concat(A);a[d]=A+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=c,n.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=o(e,r),d=0;d<a.length;d++){var A=t(a[d]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),s=t.n(c),d=t(216),A=t.n(d),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals,document.querySelector(".addProjectButton").addEventListener("click",(()=>{g.createProjectInput()})),document.querySelector(".newTodoButton").addEventListener("click",(()=>{f.addTodo()}));const f=(()=>{let e=0,n=[];return{createProject:t=>(n.push(C(t,e)),g.appendProject(t,e),console.log(n),e++,n),createProjectContent:e=>{console.log(e),n.forEach((n=>{n.isActive=!1,n.counter==e&&(n.isActive=!0,console.log(n.name))}))},addTodo:()=>{n.forEach((e=>{if(console.log("hello"),1==e.isActive){function n(e){g.createTodoDiv(e)}g.createToDoInput(n)}}))},pushTodoToProject:e=>{n.forEach((n=>{1==n.isActive&&(n.todoLists.push(e),console.log(n.todoLists))}))}}})(),C=(e,n)=>{let t=!1;return 0===n&&(t=!0),{name:e,todoLists:[],isActive:t,counter:n}};let g=(()=>{let e=document.querySelector(".projectsNav"),n=document.createElement("div");n.classList.add("todoDisplay"),document.querySelector(".content").appendChild(n);let t=0;return{createProjectInput:()=>{let n=document.createElement("input"),t=document.createElement("button");t.innerText="Submit",e.appendChild(n),e.appendChild(t),t.addEventListener("click",(()=>{f.createProject(n.value),n.remove(),t.remove()}))},appendProject:(n,o)=>{let r=document.createElement("div");r.classList.add("projectDiv"),r.classList.add(`project${o}`),e.appendChild(r),0===t&&r.classList.add("active");let a=document.createElement("div");a.classList.add(`project${o}`),r.appendChild(a),a.innerText=n;let i=document.createElement("button");i.classList.add("removeProjectButton"),i.classList.add(`project${o}`),i.innerText="x",r.appendChild(i),t++,r.addEventListener("click",(e=>{if("DIV"==e.target.nodeName){console.log("Div Pressed"),console.log(e.target.classList);for(let e=0;e<t;e++)document.querySelector(`.project${e}`).classList.remove("active");for(let n=0;n<t;n++){let t=`project${n}`;e.target.classList.contains(t)&&(document.querySelector(`.project${n}`).classList.add("active"),f.createProjectContent(n))}}else"BUTTON"==e.target.nodeName&&console.log("Button Pressed")}))},createToDoInput:e=>{console.log("input");let n=document.querySelector(".content"),t=document.createElement("div");n.appendChild(t);let o=document.createElement("input");o.placeholder="What To Do?",t.appendChild(o);let r=document.createElement("button");r.innerText="submit",t.appendChild(r),r.addEventListener("click",(()=>{let n=o.value;console.log(o.value),t.remove(),e(n)}))},createTodoDiv:e=>{let t=0,o=document.createElement("div");o.classList.add("todoDiv",`todo${t}`),n.appendChild(o);let r=document.createElement("div");r.innerText=e,o.appendChild(r);let a=document.createElement("button");a.classList.add("todoDeleteButton"),a.innerText="X",o.appendChild(a),t++,f.pushTodoToProject(o)}}})();f.createProject("General")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
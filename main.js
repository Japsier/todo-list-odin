(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    height: 100vh;\n    box-sizing: border-box;\n}\n.container {\n    height: 100%;\n    display: grid;\n    grid-template-rows: 100px 1fr 40px;\n    grid-template-columns: clamp(100px, 200px, 300px) 1fr;\n}\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    color: white;\n}\n.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    background-color: #e2e8f0;\n    padding: 10px;\n}\n.projectsNav {\n display: flex;\n flex-direction: column;\n gap: 10px;\n}\n.todoDiv {\n\n}\n.projectsNavHeader {\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n.projectsNavHeader > button {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    background-color: white;\n    border: 0;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 100ms linear;\n}\n.projectsNavHeader > button:hover {\n    transform: scale(1.1);\n    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n    cursor: pointer;\n}\n.projectsNav > button {\n    outline: none; \n    padding: 10px;\n    background-color: #e2e8f0;\n    border: 0;\n    border-bottom: 1px solid black;\n    padding-left: 5px;\n    padding-bottom: 5px;\n    width: 50px;\n    align-self: center;\n}\n.projectsNav > input {\n    outline: none;\n}\n.projectsNav > button:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n}\n.projectDiv {\n    display: flex;\n    overflow: hidden;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    padding: 10px;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n}\n.projectDiv:hover {\n    border-left: 3px solid #2ebf91;\n    \n}\n.removeProjectButton {\n    position: absolute;\n    right: 10px;\n    top: auto;\n    bottom: auto;\n    border-radius: 50%;\n    background: transparent;\n    border: 0;\n    font-size: 18px;\n    cursor: pointer;\n    transition: 50ms linear;\n}\n.removeProjectButton:hover {\n    text-decoration: underline;\n    transform: scale(1.3);\n}\n.active {\n    border-radius: 10px;\n    background: linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) )\n}\n.content {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.contentHeader {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px;\n}\n.contentHeader > h2 {\n    text-align: center;\n    margin-left: calc(50% - 100px)\n}\n.contentHeader > button {\n    margin-right: 3vw;\n}\n.newTodoButton {\n   width: 100px; \n   height: 50px;\n   font-size: 24px;\n   border-radius: 25px;\n   border: 2px solid #2ebf91;\n   color: #03b47c;\n   background-color: white;\n}\n.newTodoButton:hover {\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    color: white;\n    border: 0;\n    cursor: pointer;\n}\n.userInput {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n    margin: 30px;\n}\n.userInput > input {\n    outline: none; \n    padding: 10px;\n    background-color: white;\n    border: 0;\n    border-bottom: 1px solid black;\n    padding-left: 5px;\n    padding-bottom: 5px;\n}\n.userInput > button {\n    padding: 1px;\n    border: 0;\n    border-bottom: 1px solid black;\n    background-color: white;\n    font-size: 18px;\n    transition: 100ms linear;\n\n}\n.userInput > button:hover {\n    transform: scale(1.1);\n    padding-bottom: 3px;\n    cursor: pointer;\n}\n\n.todoDiv {\n    display: flex;\n    padding: 10px;\n    margin-left: 50px;\n    margin-right: 50px;\n    font-size: 22px;\n    border-left: 2px solid #8360c3;\n    margin-bottom: 20px;\n    align-items: center;\n    gap: 20px;\n}\n.dateDiv {\n    margin-left: auto;\n}\n\n.todoDiv > button {\n    background-color: white;\n    border: 0;\n    border-bottom: 1px solid #2ebf91;\n    color: #2ebf91;\n    padding: 5px;\n    font-size: 18px;\n    font-weight: 600;\n}\n.todoDiv > button:hover {\n    color: white;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    cursor: pointer;\n    border-radius: 10px;\n    font-weight: 700;\n    border: 0;\n}\nfooter {\n    grid-area: 3 / 1 / 4 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,4DAA4D;IAC5D,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,YAAY;IACZ,aAAa;IACb,kCAAkC;IAClC,qDAAqD;AACzD;AACA;IACI,wBAAwB;IACxB,6DAA6D;IAC7D,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;AACA;IACI,wBAAwB;IACxB,yBAAyB;IACzB,aAAa;AACjB;AACA;CACC,aAAa;CACb,sBAAsB;CACtB,SAAS;AACV;AACA;;AAEA;AACA;IACI,8BAA8B;IAC9B,aAAa;IACb,mBAAmB;IACnB,8BAA8B;;AAElC;AACA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,wBAAwB;AAC5B;AACA;IACI,qBAAqB;IACrB,+CAA+C;IAC/C,eAAe;AACnB;AACA;IACI,aAAa;IACb,aAAa;IACb,yBAAyB;IACzB,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;IACX,kBAAkB;AACtB;AACA;IACI,aAAa;AACjB;AACA;IACI,qBAAqB;IACrB,eAAe;AACnB;AACA;IACI,aAAa;IACb,gBAAgB;IAChB,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,qDAAqD;AACzD;AACA;IACI,8BAA8B;;AAElC;AACA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,eAAe;IACf,eAAe;IACf,uBAAuB;AAC3B;AACA;IACI,0BAA0B;IAC1B,qBAAqB;AACzB;AACA;IACI,mBAAmB;IACnB;AACJ;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,aAAa;AACjB;AACA;IACI,kBAAkB;IAClB;AACJ;AACA;IACI,iBAAiB;AACrB;AACA;GACG,YAAY;GACZ,YAAY;GACZ,eAAe;GACf,mBAAmB;GACnB,yBAAyB;GACzB,cAAc;GACd,uBAAuB;AAC1B;AACA;IACI,6DAA6D;IAC7D,YAAY;IACZ,SAAS;IACT,eAAe;AACnB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;IACT,YAAY;AAChB;AACA;IACI,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,mBAAmB;AACvB;AACA;IACI,YAAY;IACZ,SAAS;IACT,8BAA8B;IAC9B,uBAAuB;IACvB,eAAe;IACf,wBAAwB;;AAE5B;AACA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,8BAA8B;IAC9B,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;AACb;AACA;IACI,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;IACvB,SAAS;IACT,gCAAgC;IAChC,cAAc;IACd,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,YAAY;IACZ,6DAA6D;IAC7D,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,SAAS;AACb;AACA;IACI,wBAAwB;IACxB,6DAA6D;IAC7D,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    height: 100vh;\n    box-sizing: border-box;\n}\n.container {\n    height: 100%;\n    display: grid;\n    grid-template-rows: 100px 1fr 40px;\n    grid-template-columns: clamp(100px, 200px, 300px) 1fr;\n}\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    color: white;\n}\n.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    background-color: #e2e8f0;\n    padding: 10px;\n}\n.projectsNav {\n display: flex;\n flex-direction: column;\n gap: 10px;\n}\n.todoDiv {\n\n}\n.projectsNavHeader {\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n.projectsNavHeader > button {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    background-color: white;\n    border: 0;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 100ms linear;\n}\n.projectsNavHeader > button:hover {\n    transform: scale(1.1);\n    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n    cursor: pointer;\n}\n.projectsNav > button {\n    outline: none; \n    padding: 10px;\n    background-color: #e2e8f0;\n    border: 0;\n    border-bottom: 1px solid black;\n    padding-left: 5px;\n    padding-bottom: 5px;\n    width: 50px;\n    align-self: center;\n}\n.projectsNav > input {\n    outline: none;\n}\n.projectsNav > button:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n}\n.projectDiv {\n    display: flex;\n    overflow: hidden;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    padding: 10px;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n}\n.projectDiv:hover {\n    border-left: 3px solid #2ebf91;\n    \n}\n.removeProjectButton {\n    position: absolute;\n    right: 10px;\n    top: auto;\n    bottom: auto;\n    border-radius: 50%;\n    background: transparent;\n    border: 0;\n    font-size: 18px;\n    cursor: pointer;\n    transition: 50ms linear;\n}\n.removeProjectButton:hover {\n    text-decoration: underline;\n    transform: scale(1.3);\n}\n.active {\n    border-radius: 10px;\n    background: linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) )\n}\n.content {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.contentHeader {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px;\n}\n.contentHeader > h2 {\n    text-align: center;\n    margin-left: calc(50% - 100px)\n}\n.contentHeader > button {\n    margin-right: 3vw;\n}\n.newTodoButton {\n   width: 100px; \n   height: 50px;\n   font-size: 24px;\n   border-radius: 25px;\n   border: 2px solid #2ebf91;\n   color: #03b47c;\n   background-color: white;\n}\n.newTodoButton:hover {\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    color: white;\n    border: 0;\n    cursor: pointer;\n}\n.userInput {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n    margin: 30px;\n}\n.userInput > input {\n    outline: none; \n    padding: 10px;\n    background-color: white;\n    border: 0;\n    border-bottom: 1px solid black;\n    padding-left: 5px;\n    padding-bottom: 5px;\n}\n.userInput > button {\n    padding: 1px;\n    border: 0;\n    border-bottom: 1px solid black;\n    background-color: white;\n    font-size: 18px;\n    transition: 100ms linear;\n\n}\n.userInput > button:hover {\n    transform: scale(1.1);\n    padding-bottom: 3px;\n    cursor: pointer;\n}\n\n.todoDiv {\n    display: flex;\n    padding: 10px;\n    margin-left: 50px;\n    margin-right: 50px;\n    font-size: 22px;\n    border-left: 2px solid #8360c3;\n    margin-bottom: 20px;\n    align-items: center;\n    gap: 20px;\n}\n.dateDiv {\n    margin-left: auto;\n}\n\n.todoDiv > button {\n    background-color: white;\n    border: 0;\n    border-bottom: 1px solid #2ebf91;\n    color: #2ebf91;\n    padding: 5px;\n    font-size: 18px;\n    font-weight: 600;\n}\n.todoDiv > button:hover {\n    color: white;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    cursor: pointer;\n    border-radius: 10px;\n    font-weight: 700;\n    border: 0;\n}\nfooter {\n    grid-area: 3 / 1 / 4 / 3;\n    background-image: linear-gradient(to right, #8360c3, #2ebf91);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var d=n[A],c=o.base?d[0]+o.base:d[0],s=a[c]||0,p="".concat(c," ").concat(s);a[c]=s+1;var l=t(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var C=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var d=o(n,r),c=0;c<a.length;c++){var s=t(a[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),d=t.n(A),c=t(216),s=t.n(c),p=t(589),l=t.n(p),u=t(426),C={};C.styleTagTransform=l(),C.setAttributes=d(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=s(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals,document.querySelector(".addProjectButton").addEventListener("click",(()=>{g.createProjectInput()})),document.querySelector(".newTodoButton").addEventListener("click",(()=>{m.addTodo()}));const m=(()=>{let n=0,e=[];return{createProject:t=>(e.push(B(t,n)),g.appendProject(t,n),n++,e),switchProjectContent:(n,t)=>{let o=document.querySelector(".todoDisplay");o.innerHTML="";let r=null;for(let e=0;e<t;e++)n.classList.contains(`project${e}`)&&(r=e);e.forEach((n=>{if(n.isActive=!1,n.counter==r){n.isActive=!0;for(let e=0;e<n.todoLists.length;e++)o.appendChild(n.todoLists[e])}}))},addTodo:()=>{e.forEach((n=>{if(1==n.isActive){function e(n){g.createTodoDiv(n)}g.createToDoInput(e)}}))},pushTodoToProject:n=>{e.forEach((e=>{1==e.isActive&&e.todoLists.push(n),"General"==e.name&&0==e.isActive&&e.todoLists.push(n)}))},removeProjectPage:n=>{e.forEach((t=>{t.counter==n&&e.splice(e.indexOf(t),1)}))},removeTodoFromProject:n=>{e.forEach((t=>{if(1==t.isActive){let o=t.todoLists.indexOf(n);t.todoLists.splice(o,1),"General"==t.name&&e.forEach((e=>{if(e.todoLists.includes(n)){let t=e.todoLists.indexOf(n);e.todoLists.splice(t,1)}}))}if("General"==t.name&&0==t.isActive){let e=t.todoLists.indexOf(n);t.todoLists.splice(e,1)}}))}}})(),B=(n,e)=>{let t=!1;return 0===e&&(t=!0),{name:n,todoLists:[],isActive:t,counter:e}};let g=(()=>{let n=document.querySelector(".projectsNav"),e=document.createElement("div");e.classList.add("todoDisplay"),document.querySelector(".content").appendChild(e);let t=0,o=0;return{createProjectInput:()=>{let e=document.createElement("input"),t=document.createElement("button");t.innerText="Submit",n.appendChild(e),n.appendChild(t),t.addEventListener("click",(()=>{m.createProject(e.value),e.remove(),t.remove()}))},appendProject:(e,o)=>{let r=document.createElement("div");r.classList.add("projectDiv"),r.classList.add(`project${o}`),n.appendChild(r),0===t&&r.classList.add("active");let a=document.createElement("div");a.classList.add(`project${o}`),r.appendChild(a),a.innerText=e;let i=document.createElement("button");i.classList.add("removeProjectButton"),i.classList.add(`project${o}`),i.innerText="x",r.appendChild(i),t++,r.addEventListener("click",(n=>{if("DIV"==n.target.nodeName){let e=document.querySelector(".projectsNav"),o=e.children;for(let n=0;n<e.children.length;n++)o[n].classList.remove("active");n.target.classList.contains("projectDiv")&&(n.target.classList.add("active"),m.switchProjectContent(n.target,t)),n.target.parentNode.classList.contains("projectDiv")&&(n.target.parentNode.classList.add("active"),m.switchProjectContent(n.target.parentNode,t))}else"BUTTON"==n.target.nodeName&&((n,e)=>{for(let t=0;t<e+1;t++)n.classList.contains(`project${t}`)&&(n.remove(),m.removeProjectPage(e))})(n.target.parentNode,o)}))},createToDoInput:n=>{let e=document.querySelector(".content"),t=document.createElement("div");t.classList.add("userInput"),e.appendChild(t);let o=document.createElement("input");o.placeholder="What To Do?",t.appendChild(o);let r=document.createElement("button");r.innerText="submit",t.appendChild(r),r.addEventListener("click",(()=>{let e=o.value;t.remove(),n(e)}))},createTodoDiv:n=>{let t=document.createElement("div");t.classList.add("todoDiv",`todo${o}`),e.appendChild(t);let r=document.createElement("div");r.classList.add("todoName"),r.innerText=n,t.appendChild(r);let a=document.createElement("div");a.classList.add("dateDiv"),t.appendChild(a);let i=document.createElement("input");i.type="date";let A=new Date,d=String(A.getDate()).padStart(2,"0"),c=String(A.getMonth()+1).padStart(2,"0"),s=A.getFullYear();A=c+"-"+d+"-"+s,i.value=A,a.appendChild(i);let p=document.createElement("button");p.classList.add("todoDeleteButton"),p.innerText="remove",t.appendChild(p),p.addEventListener("click",(n=>{var e;e=n.target.parentNode,m.removeTodoFromProject(e),e.remove()})),o++,m.pushTodoToProject(t)}}})();m.createProject("General"),document.querySelector(".removeProjectButton.project0").remove()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,